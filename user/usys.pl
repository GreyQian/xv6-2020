#!/usr/bin/perl -w

# Generate usys.S, the stubs for syscalls.

# 输出注释
print "# generated by usys.pl - do not edit\n";
# 包含头文件
print "#include \"kernel/syscall.h\"\n";

# 定义了一个例程
sub entry {
    my $name = shift;               # 将第一个参数存入到name中
    print ".global $name\n";        # 打印标签
    print "${name}:\n";
    print " li a7, SYS_${name}\n";  # 生成的汇编代码用于将系统调用号加载到寄存器
    print " ecall\n";               # 执行系统调用
    print " ret\n";                 # 返回调用者
}
	
# 调用子例程,最后这个会形成库，从而让用户模块能执行系统调用
entry("fork");
entry("exit");
entry("wait");
entry("pipe");
entry("read");
entry("write");
entry("close");
entry("kill");
entry("exec");
entry("open");
entry("mknod");
entry("unlink");
entry("fstat");
entry("link");
entry("mkdir");
entry("chdir");
entry("dup");
entry("getpid");
entry("sbrk");
entry("sleep");
entry("uptime");
entry("trace");
entry("sysinfo")
